{"version":3,"file":"static/js/893.f7af8935.chunk.js","mappings":"oKA6DA,UAxDsB,SAAH,GAAgB,IAAXA,EAAI,EAAJA,KAChBC,EAAa,SAACC,EAAIC,IACtBC,EAAAA,EAAAA,GAAWF,EAAIC,GAAQE,MAAK,SAACC,GACxBA,IAAQC,EAAAA,EAAAA,IAAa,YAC1B,GACF,EAEMC,EAAa,SAACN,IAClBO,EAAAA,EAAAA,GAAWP,GAAIG,MAAK,SAACC,GAChBA,IAAQC,EAAAA,EAAAA,IAAa,YAC1B,GACF,EAEA,OACE,SAAC,EAAAG,SAAQ,WACP,iBAAKC,OAAO,EAAMC,UAAU,yBAAwB,WAClD,iBAAKA,UAAU,2BAA0B,WACvC,gBAAKA,UAAU,gCAA+B,UAC5C,wBAAI,qBAEN,gBAAKA,UAAU,0CAAyC,UACtD,iBAAKA,UAAU,MAAK,WAClB,gBAAKA,UAAU,QAAO,UACpB,kBAAOA,UAAU,0BAEnB,gBAAKA,UAAU,QAAO,UACpB,mBAAQA,UAAU,wBAAuB,SAAC,sBAKlD,gBAAKA,UAAU,cAAa,SAExBZ,EAAKa,KAAI,SAACC,EAAMC,GAAC,OACjB,gBAAwBH,UAAU,yCAAwC,UAC1E,gBAAKA,UAAU,oBAAmB,UAChC,iBAAKA,UAAU,YAAW,WACxB,eAAIA,UAAU,oBAAmB,SAAEE,EAAKE,SACxC,cAAGJ,UAAU,oBAAmB,SAAEE,EAAKG,QACvC,eAAGL,UAAU,4BAA2B,WACtC,SAAC,MAAiB,IAAG,IAAEE,EAAKI,YAC5B,cAAGC,QAASlB,EAAWmB,KAAK,EAAKN,EAAKO,IAAIP,EAAKX,QAASS,UAAU,6BAA4B,UAAC,SAAC,MAAa,OAC7G,cAAGO,QAASX,EAAWY,KAAK,EAAKN,EAAKO,KAAMT,UAAU,4BAA2B,UAAC,SAAC,MAAe,OAClG,cAAGA,UAAU,4BAA2B,SAAEE,EAAKX,kBAT3CY,EAAEO,WAaR,UAOhB,C,+GCxDab,EAAa,SAACP,GACzB,OAAOqB,IAAAA,KAAU,CACfP,MAAO,gBACPQ,KAAM,oCACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBxB,MAAK,SAACC,GACP,GAAIA,EAAOwB,YACT,OAAOC,EAAAA,EAAAA,IAAkB7B,GAAIG,MAAK,SAACC,GACjC,OAAOA,CACT,GAEJ,GACF,EAEaF,EAAa,SAACF,EAAIC,GAC7B,OAAOoB,IAAAA,KAAU,CACfP,MAAO,gBACPgB,MAAO,SACPC,aAAc,CAAEC,IAAK,MAAOC,SAAU,WAAYC,UAAW,YAAaC,SAAU,YACpFC,WAAYnC,IACXE,MAAK,SAACC,GACP,GAAIA,EAAOwB,YACT,OAAOS,EAAAA,EAAAA,IAAkBrC,EAAII,EAAOkC,OAAOnC,MAAK,SAACC,GAC/C,OAAOA,CACT,GAEJ,GACF,C","sources":["components/CompletedTask.js","helper/alert.js"],"sourcesContent":["import React, { Fragment } from 'react'\r\nimport {AiOutlineEdit, AiOutlineDelete, AiOutlineCalendar} from \"react-icons/ai\"\r\nimport { taskByStatus } from '../apiRequest/apiRequest'\r\nimport { DeleteTask, UpdateTask } from '../helper/alert'\r\n\r\nconst CompletedTask = ({task}) => {\r\n  const updateTask = (id, status) =>{\r\n    UpdateTask(id, status).then((result)=>{\r\n      if(result) taskByStatus(\"Completed\")\r\n    })\r\n  }\r\n\r\n  const deleteTask = (id) =>{\r\n    DeleteTask(id).then((result)=>{\r\n      if(result) taskByStatus(\"Completed\")\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div fluid={true} className=\"container content-body\">\r\n        <div className=\"row p-0 m-0 mb-2 mb-lg-0\">\r\n          <div className=\"col-12 col-md-6 col-lg-8 px-3\">\r\n            <h5>Complete Task</h5>\r\n          </div>\r\n          <div className=\"col-12 float-end col-md-6 col-lg-4 px-2\">\r\n            <div className=\"row\">\r\n              <div className=\"col-8\">\r\n                <input className=\"form-control w-100\" />\r\n              </div>\r\n              <div className=\"col-4\">\r\n                <button className=\"btn btn-primary w-100\">Search</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row p-0 m-0\">\r\n        {\r\n            task.map((item, i)=>\r\n            <div key={i.toString()} className=\"col-12 col-lg-4 col-sm-6 col-md-4  p-2\">\r\n            <div className=\"card shadow h-100\">\r\n              <div className=\"card-body\">\r\n                <h6 className=\"animated fadeInUp\">{item.title}</h6>\r\n                <p className=\"animated fadeInUp\">{item.desc}</p>\r\n                <p className=\"m-0 animated fadeInUp p-0\">\r\n                  <AiOutlineCalendar /> {item.createDate}\r\n                  <a onClick={updateTask.bind(this,item._id,item.status)} className=\"icon-nav text-primary mx-1\"><AiOutlineEdit /></a>\r\n                  <a onClick={deleteTask.bind(this,item._id)} className=\"icon-nav text-danger mx-1\"><AiOutlineDelete /></a>\r\n                  <a className=\"badge float-end bg-danger\">{item.status}</a>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CompletedTask","import Swal from \"sweetalert2\"\r\nimport { taskDeleteRequest, taskUpdateRequest } from \"../apiRequest/apiRequest\"\r\n\r\nexport const DeleteTask = (id) => {\r\n  return Swal.fire({\r\n    title: 'Are you sure?',\r\n    text: \"You won't be able to revert this!\",\r\n    icon: 'warning',\r\n    showCancelButton: true,\r\n    confirmButtonColor: '#3085d6',\r\n    cancelButtonColor: '#d33',\r\n    confirmButtonText: 'Yes, delete it!'\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      return taskDeleteRequest(id).then((result) => {\r\n        return result;\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\nexport const UpdateTask = (id, status) => {\r\n  return Swal.fire({\r\n    title: 'Update Status',\r\n    input: 'select',\r\n    inputOptions: { New: 'New', Progress: 'Progress', Completed: 'Completed', Canceled: 'Canceled' },\r\n    inputValue: status\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      return taskUpdateRequest(id, result.value).then((result) => {\r\n        return result;\r\n      })\r\n    }\r\n  })\r\n}"],"names":["task","updateTask","id","status","UpdateTask","then","result","taskByStatus","deleteTask","DeleteTask","Fragment","fluid","className","map","item","i","title","desc","createDate","onClick","bind","_id","toString","Swal","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","taskDeleteRequest","input","inputOptions","New","Progress","Completed","Canceled","inputValue","taskUpdateRequest","value"],"sourceRoot":""}